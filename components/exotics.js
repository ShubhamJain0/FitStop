import { StatusBar } from 'expo-status-bar';
import React, { useState, useEffect, useRef } from 'react';
import { StyleSheet, Text, View, RefreshControl, ScrollView, SafeAreaView, Image, Button, ActivityIndicator, TouchableOpacity, Animated, Dimensions, FlatList, TextInput } from 'react-native';
import { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';
import { Ionicons, FontAwesome, FontAwesome5, MaterialCommunityIcons } from "@expo/vector-icons";
import Svg, { Path, G, Rect, Circle } from 'react-native-svg';
import AsyncStorage from '@react-native-async-storage/async-storage';


export default function Exotics({ navigation }) {
  const [exoticslist, setExoticsList] = useState([]);
  const [filteredList, setFilteredList] = useState([]);
  const [cartStatus, setCartStatus] = useState(401);
  const [cartData, setCartData] = useState([]);

  const [loading, setLoading] = useState('true');
  const [refreshing, setRefreshing] = useState(false);
  const [refreshOpacity, setRefreshOpacity] = useState(0);

  const animation = new Animated.Value(0);
  const screenHeight = Dimensions.get("window").height;

  const [query, setQuery] = useState('');
  const searchInputRef = useRef(null);


    useEffect(() => {
        let mounted = true;
        let timeOut = setTimeout(() => setRefreshOpacity(1), 8000);
            fetch('http://192.168.29.234:8000/store/exoticslist/',{
            method: 'GET',
            headers: {
                'Content-type': 'application/json'
            }
            })
            .then(resp =>  resp.json().then(data => ({status: resp.status, json: data})))
            .then(resp => {if (mounted) {setExoticsList(resp.json); setFilteredList(resp.json)}})
            .then(() => setLoading('false'))
            .catch(error => console.log(error))

        return () => {
            mounted = false;
            clearTimeout(timeOut);
        }
        
    }, [])


    useEffect(() => {
        let mounted = true;
        const getCart = navigation.addListener('focus', () => {
            (async () => {
                const token = await AsyncStorage.getItem('USER_TOKEN')
                if (token) {
                    fetch('http://192.168.29.234:8000/store/cart/',{
                        method: 'GET',
                        headers: {
                            'Authorization': `Token ${token}`,
                            'Content-type': 'application/json'
                        }
                    })
                    .then(resp =>  resp.json().then(data => ({status: resp.status, json: data})))
                    .then(resp => {if (mounted) {setCartData(resp.json), setCartStatus(resp.status)}})
                    .catch(error => console.log(error))
                } else {
                    if (mounted){
                        setCartData([]);
                    }
                }

            })().catch(error => setError(error))
        });

        return () => {
            mounted = false;
        }
        
    }, [navigation])


    const searchFilterFunction = (text) => {
        // Check if searched text is not blank
        if (text) {
          // Inserted text is not blank
          // Filter the masterDataSource
          // Update FilteredDataSource
          const newData = exoticslist.filter(
            function (item) {
              const itemData = item.name
                ? item.name.toUpperCase()
                : ''.toUpperCase();
              const textData = text.toUpperCase();
              return itemData.indexOf(textData) > -1;
          });
          setFilteredList(newData);
          setQuery(text);
        } else {
          // Inserted text is blank
          // Update FilteredDataSource with masterDataSource
          setFilteredList(exoticslist);
          setQuery(text);
        }
      };




  const wait = timeout => {
      return new Promise(resolve => {
        setTimeout(resolve, timeout);
      });
  };


  const onRefresh = React.useCallback(() => {
      setRefreshing(true);
  
      wait(2000).then(() => setRefreshing(false))
  
      fetch('http://192.168.29.234:8000/store/exoticslist/',{
          method: 'GET',
          headers: {
          'Content-type': 'application/json'
          }
      })
      .then(resp =>  resp.json().then(data => ({status: resp.status, json: data})))
      .then(resp => setFilteredList(resp.json))
      .then(() => setLoading('false'))
      .catch(error => console.log(error))
  
      
  }, []);


  const buildCart = (item) => async evt => {
    const token =  await AsyncStorage.getItem('USER_TOKEN')
        if (token) {
            return fetch('http://192.168.29.234:8000/store/cart/',{
                method: 'POST',
                headers: {
                'Authorization': `Token ${token}`,
                'Content-type': 'application/json'
                },
                body: JSON.stringify({ ordereditem: item })
            })
            .then(resp =>  resp.json().then(data => ({status: resp.status, json: data})))
            .then(resp => setCartData(resp.json.cart))
            .catch(error => console.log(error))
        } else {
            navigation.navigate('Auth')
        }
    }


    const reduceItem = (item) => async evt => {
        const token = await AsyncStorage.getItem('USER_TOKEN')
        if (token) {
        return fetch('http://192.168.29.234:8000/store/reduceordelete/',{
            method: 'POST',
            headers: {
            'Authorization': `Token ${token}`,
            'Content-type': 'application/json'
            },
            body: JSON.stringify({ reduceitem: item })
        })
        .then(resp =>  resp.json().then(data => ({status: resp.status, json: data})))
        .then(resp => setCartData(resp.json.cart))
        .catch(error => console.log(error))
        } else {
            navigation.navigate('Auth')
        }
    }


    const search = (item) => {
        if (cartStatus !== 401) {
            for (var i=0; i < cartData.length; i++) {
                if (cartData[i].ordereditem === item.name) {
                    return cartData[i];
                }
            }
        }
    }


    const handleOpen = () => {
        Animated.timing(animation, {
          toValue: 1,
          duration: 1,
          useNativeDriver: true,
        }).start();
      };


    const handleClose = () => {
        Animated.timing(animation, {
          toValue: 0,
          duration: 1000,
          useNativeDriver: true,
        }).start();
        
      };


    const slideUp = {
        transform: [
          {
            translateY: animation.interpolate({
              inputRange: [0.01, 1],
              outputRange: [0, -1 * screenHeight],
            }),
          },
        ],
    };




  if (loading == 'true') {
      return (
        <SafeAreaView style={styles.refreshcontainer}>
            <View style={{flex: 0.5, paddingTop: hp(15)}}>
                <TouchableOpacity style={{alignItems: 'center', marginBottom: hp(15)}} onPress={() => navigation.navigate('cart')}>
                    <Svg height={hp(5)} viewBox="0 0 512 512" width="512"><Path fill="#99B898" d="M509.739,89.437c-2.022-2.586-5.122-4.097-8.405-4.096H96c-5.891-0.001-10.668,4.773-10.669,10.664  c0,0.717,0.072,1.433,0.216,2.136l42.667,213.333c1.079,5.531,6.274,9.269,11.861,8.533l320-42.667c4.339-0.58,7.883-3.752,8.939-8  L511.68,98.674C512.505,95.461,511.787,92.046,509.739,89.437z"/><G><Circle fill="#455A64" cx="394.667" cy="437.341" r="53.333"/><Circle fill="#455A64" cx="181.333" cy="437.341" r="53.333"/><Path fill="#455A64" d="M191.125,362.674h246.208c5.891,0,10.667-4.776,10.667-10.667c0-5.891-4.776-10.667-10.667-10.667   H191.125c-25.408-0.053-47.272-17.976-52.309-42.88L85.12,29.874c-1.014-4.967-5.384-8.534-10.453-8.533h-64   C4.776,21.341,0,26.116,0,32.007s4.776,10.667,10.667,10.667H65.92l51.989,259.968   C124.954,337.505,155.557,362.598,191.125,362.674z"/></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G></Svg>
                </TouchableOpacity>
                <TouchableOpacity disabled={true} style={{alignItems: 'center', margin: hp(4), opacity: 0.2}} onPress={() => navigation.navigate('Fruits')} >
                    <Svg height={hp(5)} viewBox="0 0 512 512" width="512"><Path d="M488,320H448V272a135.646,135.646,0,0,0-43.391-99.5c10.8-28.9,40.247-54.13,40.558-54.4A8,8,0,0,0,440,104c-23.13,0-43.238,4.541-60.1,13.524a142.337,142.337,0,0,1,10.562-15.341,184.9,184.9,0,0,1,22.7-24.076A8,8,0,0,0,408,64c-21.625,0-40.7,4.027-56.942,11.959-2.243-16.727-9.829-46.289-35.48-59.114a8,8,0,0,0-7.156,0C282.8,29.656,275.2,59.167,272.949,75.905,256.76,67.993,237.716,64,216,64a8,8,0,0,0-5.171,14.1,184.837,184.837,0,0,1,22.706,24.079,142.487,142.487,0,0,1,10.541,15.3C227.247,108.527,207.157,104,184,104a8,8,0,0,0-5.171,14.1c.315.267,29.76,25.5,40.562,54.4A135.646,135.646,0,0,0,176,272v.918c-8.827,1.677-20.508,5.5-26.746,10.183a23.539,23.539,0,0,1-2.789,1.79c2.107-19.267,5.837-38.922,12.191-48.453h0a8,8,0,1,0-13.312-8.874h0c-7.253,10.88-12.349,30.82-15.161,59.241a22.682,22.682,0,0,1-7.437-3.7C114.308,276.767,95.9,272,88.088,272c-20.916,0-39.788,8.528-53.139,24.013-15.217,17.65-21.717,42.736-17.834,68.825l5,33.577a177.583,177.583,0,0,0,20.514,60.658c13.061,23.4,35.725,36.958,59.7,36.957a64.634,64.634,0,0,0,17.45-2.416q.273-.076.538-.172l13.382-4.787a6.774,6.774,0,0,1,4.61,0l13.381,4.787c.177.064.357.121.538.172a64.646,64.646,0,0,0,17.451,2.416c17.534,0,34.364-7.261,47.253-20.313A199.9,199.9,0,0,0,304,496c49.8,0,97.916-18.855,135.5-53.091C475.405,410.194,496,368.312,496,328A8,8,0,0,0,488,320ZM278.225,279.9l33.88-32.9,33.948,32.957L312.188,312.8Zm18.4,40.1h-45.74a79.537,79.537,0,0,0-4.13-9.541l19.983-19.406Zm60.911-28.894L387.3,320h-59.56Zm-33.951-55.258,33.851-32.874,33.976,33-33.87,32.843Zm5.6-82.612a119.134,119.134,0,0,1,41.788,14.289l-13.537,13.146Zm16.768,38.587L312.1,224.7l-33.835-32.847,33.859-32.881ZM266.783,180.7l-13.64-13.242A119.1,119.1,0,0,1,295.108,153.2Zm0,22.3L300.62,235.85l-33.893,32.914-33.876-32.81Zm-11.541,76.915L237.775,296.88c-.241-.289-.478-.582-.724-.867a68.407,68.407,0,0,0-42.16-23.195l26.476-25.712Zm-5.356,118.5,5-33.577A96.693,96.693,0,0,0,254.92,336H446.578c-4.613,26.417-20.233,52.881-43.795,73.749C374.932,434.416,339.85,448,304,448a146.623,146.623,0,0,1-62.955-14.49A180.97,180.97,0,0,0,249.887,398.415ZM418.457,320,432,306.884V320ZM432,284.611l-29.126,28.207-33.843-32.855L402.9,247.121,432,275.383Zm-1.784-33.265L414.39,235.978l8.963-8.692A118.908,118.908,0,0,1,430.216,251.346Zm-14.237-39.2-13.073,12.677-33.984-33,15.722-15.268A120.912,120.912,0,0,1,415.979,212.149Zm2.981-90.616c-9.188,10.128-20.267,24.372-27.277,40.326a136.15,136.15,0,0,0-22.812-13.381c.1-1.246.252-2.492.448-3.738C382.207,132.4,398.843,124.627,418.96,121.533Zm-32.009-40c-12.99,14.321-29.755,36.867-33.466,60.941a134.954,134.954,0,0,0-28.978-5.9c-.938-2.913-2.139-6.209-3.664-9.75C330.666,108.008,349.8,87.269,386.951,81.538ZM312,33.207c19.825,12.915,23.276,42.533,23.875,51.9a97.241,97.241,0,0,0-23.887,25.235,98.949,98.949,0,0,0-12.629-15.592,97.243,97.243,0,0,0-11.232-9.665C288.729,75.695,292.19,46.112,312,33.207ZM237.06,81.55c44.324,6.88,62.782,35.164,70.312,54.537a135.295,135.295,0,0,0-36.857,6.392q-.375-2.436-.924-4.847l.282-.261c-.146-.158-.3-.31-.444-.466C264.231,114.961,249.04,94.76,237.06,81.55Zm-32.024,39.979c20.14,3.091,36.762,10.874,49.648,23.227.194,1.24.347,2.482.445,3.722a136.15,136.15,0,0,0-22.812,13.381C225.306,145.9,214.225,131.657,205.036,121.529Zm34.424,54.947L255.3,191.853l-33.946,32.965-13.24-12.824A120.9,120.9,0,0,1,239.46,176.476Zm-38.74,50.632,9.149,8.862-16.133,15.666A118.986,118.986,0,0,1,200.72,227.108ZM215.4,451.275C205.259,469.45,187.833,480,169.534,480a48.131,48.131,0,0,1-12.734-1.724L143.7,473.59a22.893,22.893,0,0,0-15.39,0L115.2,478.279c-22.6,6.191-46.118-4.634-58.6-27a161.624,161.624,0,0,1-18.659-55.216l-5-33.576c-3.2-21.482,1.952-41.9,14.127-56.022A53.249,53.249,0,0,1,88.088,288c5.082,0,19.94,4.059,25.053,7.9a38.271,38.271,0,0,0,15.75,7.013c-.394,6.368-.614,11.965-.737,16.251-6.914-1.552-10.4-4.729-10.589-4.907l.088.087a8,8,0,1,0-11.306,11.321C107.42,326.733,117.244,336,136,336c18.772,0,28.6-9.285,29.657-10.343a8,8,0,1,0-11.314-11.314c-.042.042-3.459,3.148-10.2,4.739.139-4.833.392-10.492.793-16.568a38.372,38.372,0,0,0,13.922-6.617c5.113-3.838,19.971-7.9,25.053-7.9a53.249,53.249,0,0,1,41.021,18.461c12.175,14.121,17.324,34.54,14.127,56.022l-5,33.576A161.639,161.639,0,0,1,215.4,451.275ZM428.72,431.081C394.093,462.627,349.8,480,304,480a183.62,183.62,0,0,1-76.872-17.161c.775-1.227,1.528-2.479,2.246-3.766q2.953-5.29,5.529-10.772A162.625,162.625,0,0,0,304,464c39.762,0,78.611-15.013,109.392-42.274,27.05-23.957,44.751-54.839,49.387-85.726h16.914C477.149,369.353,458.89,403.6,428.72,431.081Z" fill="black" /></Svg>
                </TouchableOpacity>
                <TouchableOpacity disabled={true} style={{alignItems: 'center', margin: hp(4), opacity: 0.2}} onPress={() => navigation.navigate('Dried-Fruits')} >
                    <Svg viewBox="0 0 512 512" height={hp(4)} width="512"><Path d="m489.67 108.004c-2.908-15.691-14.747-28.731-29.985-33.363-4.553-1.384-9.333-1.998-14.088-1.805-31.893 1.295-95.203 10.662-167.722 57.987-2.73-6.533-5.607-12.952-8.648-19.239-24.736-51.141-54.603-83.261-75.304-101.2-11.829-10.252-29.051-13.163-43.653-7.612-4.646 1.766-8.977 4.356-12.733 7.611-24.217 20.988-58.503 59.07-84.318 121.302-1.59 3.834.229 8.232 4.063 9.823 3.834 1.588 8.232-.228 9.823-4.063 20.617-49.701 46.739-83.165 68.185-104.461-9.267 18.721-19.735 44.861-28.874 79.98-15.709 60.37-23.674 132.275-23.674 213.718 0 54.101 7.87 100.309 22.759 133.628 5.103 11.42 10.969 21.081 17.438 28.849-19.277-7.365-36.57-19.8-50.622-36.718-25.745-30.996-39.353-74.483-39.353-125.759 0-59.448 8.106-114.032 24.092-162.234 1.306-3.94-.829-8.194-4.768-9.5-3.947-1.307-8.195.828-9.501 4.768-16.492 49.731-24.855 105.907-24.855 166.966 0 54.828 14.808 101.636 42.822 135.364 26.756 32.213 64.038 49.954 104.976 49.954 12.627 0 24.903-1.693 36.632-4.972 11.755 3.298 23.894 4.963 36.224 4.963 18.458 0 37.33-3.684 55.899-11.01 33.068-13.046 64.673-37.645 91.399-71.139 23.191-29.065 42.99-58.882 58.846-88.624 1.952-3.663.567-8.216-3.097-10.169-3.663-1.953-8.216-.567-10.169 3.097-15.423 28.931-34.713 57.974-57.331 86.32-25.089 31.442-54.539 54.448-85.165 66.531-20.172 7.957-40.66 11.155-60.356 9.542 15.757-8.345 30.003-19.935 42.095-34.493 4.413-5.313 8.497-10.952 12.249-16.895 17.532-15.495 35.112-34.235 52.267-55.733 50.797-63.661 89.419-124.834 114.793-181.82 14.748-33.121 22.868-60.065 27.304-80.471 4.351 38.257 2.825 102.158-32.757 180.485-1.586 3.489-.214 7.73 3.112 9.633 3.794 2.17 8.77.557 10.574-3.415 42.99-94.636 38.138-169.577 31.421-205.826zm-189.161 94.461c71.675-69.936 126.174-97.159 153.821-107.424l-142.946 179.146c-2.095-24.967-5.73-48.893-10.875-71.722zm129.104-113.325c-52.416 24.469-102.298 66.979-133.235 96.436-3.692-13.935-7.981-27.429-12.855-40.472 59.535-39.5 112.533-52.207 146.09-55.964zm-331.837 237.542c0-80.167 7.802-150.799 23.189-209.932 12.224-46.98 26.753-77.027 37.249-94.454v473.732c-14.791-3.684-28.424-18.214-38.987-41.851-14.034-31.405-21.451-75.492-21.451-127.495zm161.367 125.759c-14.053 16.919-31.345 29.353-50.623 36.718 6.469-7.768 12.335-17.429 17.439-28.849 14.889-33.319 22.759-79.527 22.759-133.628 0-4.151-3.365-7.517-7.516-7.517-4.152 0-7.516 3.365-7.516 7.517 0 52.004-7.418 96.09-21.45 127.495-10.563 23.637-24.197 38.166-38.988 41.851v-473.735c21.036 34.892 55.33 114.851 59.93 269.594.124 4.149 3.624 7.428 7.737 7.29 4.15-.123 7.414-3.587 7.29-7.737-4.027-135.444-30.699-215.469-51.994-258.41 18.18 18.084 40.381 45.604 59.483 85.099 28.403 58.723 42.804 128.89 42.804 208.553-.001 51.276-13.609 94.763-39.355 125.759zm177.14-250.958c-24.855 55.819-62.81 115.896-112.811 178.559-7.278 9.121-14.627 17.718-22.005 25.759 7.96-23.665 12.063-50.28 12.063-79.118 0-10.22-.232-20.292-.695-30.21l153.244-192.052c-2.665 20.167-10.05 52.714-29.796 97.062z" fill="black" /></Svg>
                </TouchableOpacity>
                <TouchableOpacity disabled={true} style={{alignItems: 'center', margin: hp(4)}} onPress={() => navigation.navigate('Exotics')} >
                    <Svg  viewBox="0 0 512 512" height={hp(4)} width="512"><Path id="XMLID_18_" d="m420.5 265.8-.3.3c-11.1 13.8-20.7 27-29.2 39.5l.1.1c10.9 6.6 25 7 36.5-.4 8.8-5.6 14.2-14.5 15.6-24l.1-.3c-9-2.3-17-7.9-22.8-15.2z" fill="#3b601c"/><Path id="XMLID_53_" d="m325.8 244.4-23.4 50.3c-18.2 8.9-41.8-1.5-49.8-13.3l-3.6-20.3c5.3.8 10.7 1.2 16.2 1.2 21.9.1 42.6-6.4 60.6-17.9z" fill="#4e7a25"/><Path id="XMLID_54_" d="m180.4 222.5c7.8 8.5 16.3 15.9 25.4 21.9-4.5 30-42.7 45.2-66.1 25.4-5.3-10.3-8.9-17.4-9.1-17.8 12.5-.3 25-4.6 35.6-13.1 5.9-4.8 10.7-10.3 14.2-16.4z" fill="#3b601c"/><Path id="XMLID_55_" d="m81.7 251.7 32.8 63.1-.4.2c-21.6 10-47.2.5-57.2-21.1-6.2-13.5-4.8-28.6 2.3-40.4l.7-2.8c1.3.3 2.7.6 4.1.9 6 1 12 1 17.7.1z" fill="#3b601c"/><G id="XMLID_1_"><Path id="XMLID_11_" d="m66.9 283.9c-4.8-10.5-5.1-22-1.6-32.1-.5-.1-.9-.1-1.4-.2-1.4-.2-2.7-.5-4.1-.9l-.7 2.8c-7.2 11.8-8.5 26.9-2.3 40.4 9.9 21.6 35.5 31.1 57.2 21.1l.5-.2-3.2-6.1c-18.1 2.2-36.3-7.3-44.4-24.8z" fill="#4d841e"/></G><G id="XMLID_12_"><Path id="XMLID_13_" d="m190.9 232.8c-6.5 23.7-34.7 36.4-56.5 26.4 1.5 2.9 3.3 6.4 5.4 10.5 23.3 19.8 61.5 4.7 66.1-25.4-5.2-3.3-10.2-7.2-15-11.5z" fill="#315112"/></G><Path id="XMLID_15_" d="m249 261.5 3.5 19.9c7.9 11.8 31.6 22.2 49.8 13.3l8.9-19.2c-22.6 7.6-50.3-2-62.2-14z" fill="#2c4415"/><G id="XMLID_16_"><Path id="XMLID_17_" d="m427.6 291.3c-9.1 5.8-19.8 6.8-29.3 3.7-2.5 3.6-5 7.1-7.3 10.6l.1.1c10.9 6.6 25 7 36.5-.4 8.8-5.6 14.2-14.5 15.6-24l.1-.3c-1.5-.4-3-.9-4.4-1.4-2.7 4.6-6.5 8.7-11.3 11.7z" fill="#4d841e"/></G><Path d="m331.8 230.4-64.1 136.8-18.7-106.1c-15.4-2.4-30.1-8.1-43.1-16.8l8.1 97.5c.1 22.3-21 28.5-31.5 9.7l-59.5-114.7-41.8 14 113.1 218c6.4 16.3 22.1 27.1 39.8 27.1h46.1c18.7 0 34.7-12.4 40.8-30.1 16.5-47.6 30-96 72-158.3l36.3-52.6z" fill="#cadd78"/><G fill="#adbc55"><Path d="m296.7 488.4h-46.1c-17.6 0-33.4-10.8-39.8-27.1l-111.7-215.6-17.4 5.9 112.6 217.2c6.4 16.3 22.1 27.1 39.8 27.1h46.1c9.1 0 18-3 25.3-8.5-2.9.7-5.8 1-8.8 1z"/><Path d="m223.9 254c-6.3-2.7-12.3-5.9-18-9.6l8.1 97.5c.1 4.4-.9 8.8-2.9 12.7 9.6 2.7 19.5-5 19.5-20.3z"/><Path d="m333.8 224.5-66 142.9 2.9 16.3c1.2 9.4 5.1 11.2 9.5 9.8 3.7-1.1 6.5-4.1 7.9-7.7l70.6-161.2z"/></G><Path id="XMLID_27_" d="m88.6 156c-19.3 20.8-21.4 52.7-3.5 75 4.6 5.7 10 10.2 16 13.6-10.8 6.4-23.8 9.2-37.1 6.9-29.7-5-49.7-33.2-44.7-62.9s33.2-49.7 62.9-44.7l1.4-.4c1.2 4.4 2.8 8.5 5 12.5z" fill="#3b601c"/><Path id="XMLID_26_" d="m415 253.6c-13 5.3-27.3 6-40.6 2.3-10.9-3-21.1-9.1-29.3-18-1.5-1.6-2.8-3.2-4.1-4.9l-.2.1c-21.1 18.4-47.3 29.3-75.6 29.3-33.4 0-62.1-15.1-84.7-39.9-3.6 6.1-8.3 11.6-14.1 16.3-19.3 15.5-45.3 17.1-65.2 5.8-6-3.4-11.4-7.9-16-13.6-17.8-22.2-15.8-54.1 3.5-75-2.2-4-3.8-8.1-5-12.4-11.8-44.2 31.8-99.3 90.1-67.6 32.9-88.1 154.6-69.1 181.8-7.6 41.9-20.6 86.8 21.8 71.1 54.9h1.5c34.8 0 63 28.2 63 62.9 0 11.4-3.1 22.2-8.4 31.4 6.6 7 10.7 16.6 10.7 27 0 21.8-17.7 39.5-39.5 39.5-18 0-34.2-14.2-39-30.5z" fill="#4d841e"/><G id="XMLID_2_"><Path id="XMLID_10_" d="m453.9 244.1c-17.9 0-34.1-14.2-39-30.6-13 5.3-27.3 6-40.6 2.3-10.9-3-21.1-9-29.3-18-1.5-1.6-2.8-3.2-4.1-4.9l-.2.1c-21.1 18.4-47.3 29.3-75.6 29.3-33.4 0-62.1-15.1-84.7-39.9-3.6 6.1-8.3 11.6-14.1 16.3-19.3 15.5-45.3 17.1-65.2 5.8-6-3.4-11.5-7.9-16-13.6-3.8-4.7-6.6-9.8-8.7-15.2-6.7 18.3-4.2 39.2 8.7 55.2 4.6 5.7 10 10.2 16 13.6 19.9 11.2 45.9 9.7 65.2-5.8 5.8-4.7 10.6-10.2 14.1-16.3 22.6 24.7 51.3 39.9 84.7 39.9 28.3 0 54.5-10.9 75.6-29.3l.2-.1c1.3 1.7 2.6 3.3 4.1 4.9 8.2 8.9 18.4 14.9 29.3 18 13.3 3.7 27.6 3 40.6-2.3 4.8 16.4 21 30.6 39 30.6 21.8 0 39.5-17.7 39.5-39.5 0-7.3-2-14.1-5.4-20-6.9 11.7-19.5 19.5-34.1 19.5z" fill="#67a829"/></G><G id="XMLID_6_"><Path id="XMLID_7_" d="m85.8 231.8c-.6-.1-1.2-.2-1.8-.3-29.7-5-49.7-33.2-44.7-62.9 1.1-6.6 3.4-12.7 6.5-18.1-13.6 7.8-23.7 21.5-26.5 38.1-5 29.7 15 57.9 44.7 62.9 13.3 2.2 26.3-.5 37.1-6.9-5.7-3.2-10.9-7.5-15.3-12.8z" fill="#4d841e"/></G></Svg>
                </TouchableOpacity>    
                
            </View>
            <View style={{flex: 1}}>
                <ScrollView bounces={false}
                    contentContainerStyle={styles.refreshscrollview}
                    refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}
                >
                    <ActivityIndicator color="red" size={50} />
                    <Text style={{color: 'black', marginTop: 10, opacity: refreshOpacity}}>Pull down to refresh</Text>
                </ScrollView>
            </View>
        </SafeAreaView>
    )
  }


  return (
            <View style={{flexDirection: 'row', backgroundColor: 'white', flex: 1}}>
                <View style={{flex: 0.5, paddingTop: hp(15)}}>
                    <TouchableOpacity style={{alignItems: 'center', marginBottom: hp(15)}} onPress={() => navigation.navigate('cart')}>
                        <Svg height={hp(5)} viewBox="0 0 512 512" width="512"><Path fill="#99B898" d="M509.739,89.437c-2.022-2.586-5.122-4.097-8.405-4.096H96c-5.891-0.001-10.668,4.773-10.669,10.664  c0,0.717,0.072,1.433,0.216,2.136l42.667,213.333c1.079,5.531,6.274,9.269,11.861,8.533l320-42.667c4.339-0.58,7.883-3.752,8.939-8  L511.68,98.674C512.505,95.461,511.787,92.046,509.739,89.437z"/><G><Circle fill="#455A64" cx="394.667" cy="437.341" r="53.333"/><Circle fill="#455A64" cx="181.333" cy="437.341" r="53.333"/><Path fill="#455A64" d="M191.125,362.674h246.208c5.891,0,10.667-4.776,10.667-10.667c0-5.891-4.776-10.667-10.667-10.667   H191.125c-25.408-0.053-47.272-17.976-52.309-42.88L85.12,29.874c-1.014-4.967-5.384-8.534-10.453-8.533h-64   C4.776,21.341,0,26.116,0,32.007s4.776,10.667,10.667,10.667H65.92l51.989,259.968   C124.954,337.505,155.557,362.598,191.125,362.674z"/></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G><G></G></Svg>
                    </TouchableOpacity>
                    <TouchableOpacity style={{alignItems: 'center', margin: hp(4), opacity: 0.2}} onPress={() => navigation.navigate('Fruits')} >
                        <Svg height={hp(5)} viewBox="0 0 512 512" width="512"><Path d="M488,320H448V272a135.646,135.646,0,0,0-43.391-99.5c10.8-28.9,40.247-54.13,40.558-54.4A8,8,0,0,0,440,104c-23.13,0-43.238,4.541-60.1,13.524a142.337,142.337,0,0,1,10.562-15.341,184.9,184.9,0,0,1,22.7-24.076A8,8,0,0,0,408,64c-21.625,0-40.7,4.027-56.942,11.959-2.243-16.727-9.829-46.289-35.48-59.114a8,8,0,0,0-7.156,0C282.8,29.656,275.2,59.167,272.949,75.905,256.76,67.993,237.716,64,216,64a8,8,0,0,0-5.171,14.1,184.837,184.837,0,0,1,22.706,24.079,142.487,142.487,0,0,1,10.541,15.3C227.247,108.527,207.157,104,184,104a8,8,0,0,0-5.171,14.1c.315.267,29.76,25.5,40.562,54.4A135.646,135.646,0,0,0,176,272v.918c-8.827,1.677-20.508,5.5-26.746,10.183a23.539,23.539,0,0,1-2.789,1.79c2.107-19.267,5.837-38.922,12.191-48.453h0a8,8,0,1,0-13.312-8.874h0c-7.253,10.88-12.349,30.82-15.161,59.241a22.682,22.682,0,0,1-7.437-3.7C114.308,276.767,95.9,272,88.088,272c-20.916,0-39.788,8.528-53.139,24.013-15.217,17.65-21.717,42.736-17.834,68.825l5,33.577a177.583,177.583,0,0,0,20.514,60.658c13.061,23.4,35.725,36.958,59.7,36.957a64.634,64.634,0,0,0,17.45-2.416q.273-.076.538-.172l13.382-4.787a6.774,6.774,0,0,1,4.61,0l13.381,4.787c.177.064.357.121.538.172a64.646,64.646,0,0,0,17.451,2.416c17.534,0,34.364-7.261,47.253-20.313A199.9,199.9,0,0,0,304,496c49.8,0,97.916-18.855,135.5-53.091C475.405,410.194,496,368.312,496,328A8,8,0,0,0,488,320ZM278.225,279.9l33.88-32.9,33.948,32.957L312.188,312.8Zm18.4,40.1h-45.74a79.537,79.537,0,0,0-4.13-9.541l19.983-19.406Zm60.911-28.894L387.3,320h-59.56Zm-33.951-55.258,33.851-32.874,33.976,33-33.87,32.843Zm5.6-82.612a119.134,119.134,0,0,1,41.788,14.289l-13.537,13.146Zm16.768,38.587L312.1,224.7l-33.835-32.847,33.859-32.881ZM266.783,180.7l-13.64-13.242A119.1,119.1,0,0,1,295.108,153.2Zm0,22.3L300.62,235.85l-33.893,32.914-33.876-32.81Zm-11.541,76.915L237.775,296.88c-.241-.289-.478-.582-.724-.867a68.407,68.407,0,0,0-42.16-23.195l26.476-25.712Zm-5.356,118.5,5-33.577A96.693,96.693,0,0,0,254.92,336H446.578c-4.613,26.417-20.233,52.881-43.795,73.749C374.932,434.416,339.85,448,304,448a146.623,146.623,0,0,1-62.955-14.49A180.97,180.97,0,0,0,249.887,398.415ZM418.457,320,432,306.884V320ZM432,284.611l-29.126,28.207-33.843-32.855L402.9,247.121,432,275.383Zm-1.784-33.265L414.39,235.978l8.963-8.692A118.908,118.908,0,0,1,430.216,251.346Zm-14.237-39.2-13.073,12.677-33.984-33,15.722-15.268A120.912,120.912,0,0,1,415.979,212.149Zm2.981-90.616c-9.188,10.128-20.267,24.372-27.277,40.326a136.15,136.15,0,0,0-22.812-13.381c.1-1.246.252-2.492.448-3.738C382.207,132.4,398.843,124.627,418.96,121.533Zm-32.009-40c-12.99,14.321-29.755,36.867-33.466,60.941a134.954,134.954,0,0,0-28.978-5.9c-.938-2.913-2.139-6.209-3.664-9.75C330.666,108.008,349.8,87.269,386.951,81.538ZM312,33.207c19.825,12.915,23.276,42.533,23.875,51.9a97.241,97.241,0,0,0-23.887,25.235,98.949,98.949,0,0,0-12.629-15.592,97.243,97.243,0,0,0-11.232-9.665C288.729,75.695,292.19,46.112,312,33.207ZM237.06,81.55c44.324,6.88,62.782,35.164,70.312,54.537a135.295,135.295,0,0,0-36.857,6.392q-.375-2.436-.924-4.847l.282-.261c-.146-.158-.3-.31-.444-.466C264.231,114.961,249.04,94.76,237.06,81.55Zm-32.024,39.979c20.14,3.091,36.762,10.874,49.648,23.227.194,1.24.347,2.482.445,3.722a136.15,136.15,0,0,0-22.812,13.381C225.306,145.9,214.225,131.657,205.036,121.529Zm34.424,54.947L255.3,191.853l-33.946,32.965-13.24-12.824A120.9,120.9,0,0,1,239.46,176.476Zm-38.74,50.632,9.149,8.862-16.133,15.666A118.986,118.986,0,0,1,200.72,227.108ZM215.4,451.275C205.259,469.45,187.833,480,169.534,480a48.131,48.131,0,0,1-12.734-1.724L143.7,473.59a22.893,22.893,0,0,0-15.39,0L115.2,478.279c-22.6,6.191-46.118-4.634-58.6-27a161.624,161.624,0,0,1-18.659-55.216l-5-33.576c-3.2-21.482,1.952-41.9,14.127-56.022A53.249,53.249,0,0,1,88.088,288c5.082,0,19.94,4.059,25.053,7.9a38.271,38.271,0,0,0,15.75,7.013c-.394,6.368-.614,11.965-.737,16.251-6.914-1.552-10.4-4.729-10.589-4.907l.088.087a8,8,0,1,0-11.306,11.321C107.42,326.733,117.244,336,136,336c18.772,0,28.6-9.285,29.657-10.343a8,8,0,1,0-11.314-11.314c-.042.042-3.459,3.148-10.2,4.739.139-4.833.392-10.492.793-16.568a38.372,38.372,0,0,0,13.922-6.617c5.113-3.838,19.971-7.9,25.053-7.9a53.249,53.249,0,0,1,41.021,18.461c12.175,14.121,17.324,34.54,14.127,56.022l-5,33.576A161.639,161.639,0,0,1,215.4,451.275ZM428.72,431.081C394.093,462.627,349.8,480,304,480a183.62,183.62,0,0,1-76.872-17.161c.775-1.227,1.528-2.479,2.246-3.766q2.953-5.29,5.529-10.772A162.625,162.625,0,0,0,304,464c39.762,0,78.611-15.013,109.392-42.274,27.05-23.957,44.751-54.839,49.387-85.726h16.914C477.149,369.353,458.89,403.6,428.72,431.081Z" fill="black" /></Svg>
                    </TouchableOpacity>
                    <TouchableOpacity style={{alignItems: 'center', margin: hp(4), opacity: 0.2}} onPress={() => navigation.navigate('Dried-Fruits')} >
                        <Svg viewBox="0 0 512 512" height={hp(4)} width="512"><Path d="m489.67 108.004c-2.908-15.691-14.747-28.731-29.985-33.363-4.553-1.384-9.333-1.998-14.088-1.805-31.893 1.295-95.203 10.662-167.722 57.987-2.73-6.533-5.607-12.952-8.648-19.239-24.736-51.141-54.603-83.261-75.304-101.2-11.829-10.252-29.051-13.163-43.653-7.612-4.646 1.766-8.977 4.356-12.733 7.611-24.217 20.988-58.503 59.07-84.318 121.302-1.59 3.834.229 8.232 4.063 9.823 3.834 1.588 8.232-.228 9.823-4.063 20.617-49.701 46.739-83.165 68.185-104.461-9.267 18.721-19.735 44.861-28.874 79.98-15.709 60.37-23.674 132.275-23.674 213.718 0 54.101 7.87 100.309 22.759 133.628 5.103 11.42 10.969 21.081 17.438 28.849-19.277-7.365-36.57-19.8-50.622-36.718-25.745-30.996-39.353-74.483-39.353-125.759 0-59.448 8.106-114.032 24.092-162.234 1.306-3.94-.829-8.194-4.768-9.5-3.947-1.307-8.195.828-9.501 4.768-16.492 49.731-24.855 105.907-24.855 166.966 0 54.828 14.808 101.636 42.822 135.364 26.756 32.213 64.038 49.954 104.976 49.954 12.627 0 24.903-1.693 36.632-4.972 11.755 3.298 23.894 4.963 36.224 4.963 18.458 0 37.33-3.684 55.899-11.01 33.068-13.046 64.673-37.645 91.399-71.139 23.191-29.065 42.99-58.882 58.846-88.624 1.952-3.663.567-8.216-3.097-10.169-3.663-1.953-8.216-.567-10.169 3.097-15.423 28.931-34.713 57.974-57.331 86.32-25.089 31.442-54.539 54.448-85.165 66.531-20.172 7.957-40.66 11.155-60.356 9.542 15.757-8.345 30.003-19.935 42.095-34.493 4.413-5.313 8.497-10.952 12.249-16.895 17.532-15.495 35.112-34.235 52.267-55.733 50.797-63.661 89.419-124.834 114.793-181.82 14.748-33.121 22.868-60.065 27.304-80.471 4.351 38.257 2.825 102.158-32.757 180.485-1.586 3.489-.214 7.73 3.112 9.633 3.794 2.17 8.77.557 10.574-3.415 42.99-94.636 38.138-169.577 31.421-205.826zm-189.161 94.461c71.675-69.936 126.174-97.159 153.821-107.424l-142.946 179.146c-2.095-24.967-5.73-48.893-10.875-71.722zm129.104-113.325c-52.416 24.469-102.298 66.979-133.235 96.436-3.692-13.935-7.981-27.429-12.855-40.472 59.535-39.5 112.533-52.207 146.09-55.964zm-331.837 237.542c0-80.167 7.802-150.799 23.189-209.932 12.224-46.98 26.753-77.027 37.249-94.454v473.732c-14.791-3.684-28.424-18.214-38.987-41.851-14.034-31.405-21.451-75.492-21.451-127.495zm161.367 125.759c-14.053 16.919-31.345 29.353-50.623 36.718 6.469-7.768 12.335-17.429 17.439-28.849 14.889-33.319 22.759-79.527 22.759-133.628 0-4.151-3.365-7.517-7.516-7.517-4.152 0-7.516 3.365-7.516 7.517 0 52.004-7.418 96.09-21.45 127.495-10.563 23.637-24.197 38.166-38.988 41.851v-473.735c21.036 34.892 55.33 114.851 59.93 269.594.124 4.149 3.624 7.428 7.737 7.29 4.15-.123 7.414-3.587 7.29-7.737-4.027-135.444-30.699-215.469-51.994-258.41 18.18 18.084 40.381 45.604 59.483 85.099 28.403 58.723 42.804 128.89 42.804 208.553-.001 51.276-13.609 94.763-39.355 125.759zm177.14-250.958c-24.855 55.819-62.81 115.896-112.811 178.559-7.278 9.121-14.627 17.718-22.005 25.759 7.96-23.665 12.063-50.28 12.063-79.118 0-10.22-.232-20.292-.695-30.21l153.244-192.052c-2.665 20.167-10.05 52.714-29.796 97.062z" fill="black" /></Svg>
                    </TouchableOpacity>
                    <TouchableOpacity style={{alignItems: 'center', margin: hp(4)}} onPress={() => navigation.navigate('Exotics')} >
                        <Svg  viewBox="0 0 512 512" height={hp(4)} width="512"><Path id="XMLID_18_" d="m420.5 265.8-.3.3c-11.1 13.8-20.7 27-29.2 39.5l.1.1c10.9 6.6 25 7 36.5-.4 8.8-5.6 14.2-14.5 15.6-24l.1-.3c-9-2.3-17-7.9-22.8-15.2z" fill="#3b601c"/><Path id="XMLID_53_" d="m325.8 244.4-23.4 50.3c-18.2 8.9-41.8-1.5-49.8-13.3l-3.6-20.3c5.3.8 10.7 1.2 16.2 1.2 21.9.1 42.6-6.4 60.6-17.9z" fill="#4e7a25"/><Path id="XMLID_54_" d="m180.4 222.5c7.8 8.5 16.3 15.9 25.4 21.9-4.5 30-42.7 45.2-66.1 25.4-5.3-10.3-8.9-17.4-9.1-17.8 12.5-.3 25-4.6 35.6-13.1 5.9-4.8 10.7-10.3 14.2-16.4z" fill="#3b601c"/><Path id="XMLID_55_" d="m81.7 251.7 32.8 63.1-.4.2c-21.6 10-47.2.5-57.2-21.1-6.2-13.5-4.8-28.6 2.3-40.4l.7-2.8c1.3.3 2.7.6 4.1.9 6 1 12 1 17.7.1z" fill="#3b601c"/><G id="XMLID_1_"><Path id="XMLID_11_" d="m66.9 283.9c-4.8-10.5-5.1-22-1.6-32.1-.5-.1-.9-.1-1.4-.2-1.4-.2-2.7-.5-4.1-.9l-.7 2.8c-7.2 11.8-8.5 26.9-2.3 40.4 9.9 21.6 35.5 31.1 57.2 21.1l.5-.2-3.2-6.1c-18.1 2.2-36.3-7.3-44.4-24.8z" fill="#4d841e"/></G><G id="XMLID_12_"><Path id="XMLID_13_" d="m190.9 232.8c-6.5 23.7-34.7 36.4-56.5 26.4 1.5 2.9 3.3 6.4 5.4 10.5 23.3 19.8 61.5 4.7 66.1-25.4-5.2-3.3-10.2-7.2-15-11.5z" fill="#315112"/></G><Path id="XMLID_15_" d="m249 261.5 3.5 19.9c7.9 11.8 31.6 22.2 49.8 13.3l8.9-19.2c-22.6 7.6-50.3-2-62.2-14z" fill="#2c4415"/><G id="XMLID_16_"><Path id="XMLID_17_" d="m427.6 291.3c-9.1 5.8-19.8 6.8-29.3 3.7-2.5 3.6-5 7.1-7.3 10.6l.1.1c10.9 6.6 25 7 36.5-.4 8.8-5.6 14.2-14.5 15.6-24l.1-.3c-1.5-.4-3-.9-4.4-1.4-2.7 4.6-6.5 8.7-11.3 11.7z" fill="#4d841e"/></G><Path d="m331.8 230.4-64.1 136.8-18.7-106.1c-15.4-2.4-30.1-8.1-43.1-16.8l8.1 97.5c.1 22.3-21 28.5-31.5 9.7l-59.5-114.7-41.8 14 113.1 218c6.4 16.3 22.1 27.1 39.8 27.1h46.1c18.7 0 34.7-12.4 40.8-30.1 16.5-47.6 30-96 72-158.3l36.3-52.6z" fill="#cadd78"/><G fill="#adbc55"><Path d="m296.7 488.4h-46.1c-17.6 0-33.4-10.8-39.8-27.1l-111.7-215.6-17.4 5.9 112.6 217.2c6.4 16.3 22.1 27.1 39.8 27.1h46.1c9.1 0 18-3 25.3-8.5-2.9.7-5.8 1-8.8 1z"/><Path d="m223.9 254c-6.3-2.7-12.3-5.9-18-9.6l8.1 97.5c.1 4.4-.9 8.8-2.9 12.7 9.6 2.7 19.5-5 19.5-20.3z"/><Path d="m333.8 224.5-66 142.9 2.9 16.3c1.2 9.4 5.1 11.2 9.5 9.8 3.7-1.1 6.5-4.1 7.9-7.7l70.6-161.2z"/></G><Path id="XMLID_27_" d="m88.6 156c-19.3 20.8-21.4 52.7-3.5 75 4.6 5.7 10 10.2 16 13.6-10.8 6.4-23.8 9.2-37.1 6.9-29.7-5-49.7-33.2-44.7-62.9s33.2-49.7 62.9-44.7l1.4-.4c1.2 4.4 2.8 8.5 5 12.5z" fill="#3b601c"/><Path id="XMLID_26_" d="m415 253.6c-13 5.3-27.3 6-40.6 2.3-10.9-3-21.1-9.1-29.3-18-1.5-1.6-2.8-3.2-4.1-4.9l-.2.1c-21.1 18.4-47.3 29.3-75.6 29.3-33.4 0-62.1-15.1-84.7-39.9-3.6 6.1-8.3 11.6-14.1 16.3-19.3 15.5-45.3 17.1-65.2 5.8-6-3.4-11.4-7.9-16-13.6-17.8-22.2-15.8-54.1 3.5-75-2.2-4-3.8-8.1-5-12.4-11.8-44.2 31.8-99.3 90.1-67.6 32.9-88.1 154.6-69.1 181.8-7.6 41.9-20.6 86.8 21.8 71.1 54.9h1.5c34.8 0 63 28.2 63 62.9 0 11.4-3.1 22.2-8.4 31.4 6.6 7 10.7 16.6 10.7 27 0 21.8-17.7 39.5-39.5 39.5-18 0-34.2-14.2-39-30.5z" fill="#4d841e"/><G id="XMLID_2_"><Path id="XMLID_10_" d="m453.9 244.1c-17.9 0-34.1-14.2-39-30.6-13 5.3-27.3 6-40.6 2.3-10.9-3-21.1-9-29.3-18-1.5-1.6-2.8-3.2-4.1-4.9l-.2.1c-21.1 18.4-47.3 29.3-75.6 29.3-33.4 0-62.1-15.1-84.7-39.9-3.6 6.1-8.3 11.6-14.1 16.3-19.3 15.5-45.3 17.1-65.2 5.8-6-3.4-11.5-7.9-16-13.6-3.8-4.7-6.6-9.8-8.7-15.2-6.7 18.3-4.2 39.2 8.7 55.2 4.6 5.7 10 10.2 16 13.6 19.9 11.2 45.9 9.7 65.2-5.8 5.8-4.7 10.6-10.2 14.1-16.3 22.6 24.7 51.3 39.9 84.7 39.9 28.3 0 54.5-10.9 75.6-29.3l.2-.1c1.3 1.7 2.6 3.3 4.1 4.9 8.2 8.9 18.4 14.9 29.3 18 13.3 3.7 27.6 3 40.6-2.3 4.8 16.4 21 30.6 39 30.6 21.8 0 39.5-17.7 39.5-39.5 0-7.3-2-14.1-5.4-20-6.9 11.7-19.5 19.5-34.1 19.5z" fill="#67a829"/></G><G id="XMLID_6_"><Path id="XMLID_7_" d="m85.8 231.8c-.6-.1-1.2-.2-1.8-.3-29.7-5-49.7-33.2-44.7-62.9 1.1-6.6 3.4-12.7 6.5-18.1-13.6 7.8-23.7 21.5-26.5 38.1-5 29.7 15 57.9 44.7 62.9 13.3 2.2 26.3-.5 37.1-6.9-5.7-3.2-10.9-7.5-15.3-12.8z" fill="#4d841e"/></G></Svg>
                    </TouchableOpacity>    
                    
                </View>
                
                    <StatusBar style="auto" />
                    <View style={styles.container}>
                        <View
                            style={{
                            backgroundColor: '#fff',
                            flexDirection: 'row',
                            alignItems: 'center',
                            marginBottom: hp(4)
                            }}
                        >
                            <View style={{flex: 0.1, justifyContent: 'flex-end', alignItems: 'flex-end', marginRight: 5}}>
                                <TouchableOpacity onPress={() => searchInputRef.current.focus()}>
                                    <FontAwesome name="search" size={20} color="black"  />
                                </TouchableOpacity>
                            </View>
                            <View style={{flex: 1}}>
                                <TextInput
                                    autoCapitalize="none"
                                    autoCorrect={false}
                                    clearButtonMode="always"
                                    value={query}
                                    onChangeText={(text) => searchFilterFunction(text)}
                                    ref={searchInputRef}
                                    placeholder="Search"
                                />
                            </View>
                        </View>
                        <FlatList 
                            data={filteredList}
                            keyExtractor={(item, index) => index.toString()}
                            renderItem={({ item }) => (
                                    <View key={item.id} style={{flexDirection: 'row', marginBottom: hp(4), backgroundColor: 'white', shadowOffset: {width: 1.5, height: 1.5}, elevation: 1.5, margin: wp(1), padding: wp(6), borderRadius: 10}}>
                                        <View style={{flex: 1}}>
                                            <Image source={{uri: item.image}} style={{width: 100, height: 80, borderRadius: 5}}  />
                                            <TouchableOpacity onPress={() => navigation.navigate('Details', {detailItem: item})} activeOpacity={1}>
                                                <Text style={{textAlign: 'center', fontFamily: 'sofia-medium'}}>View Details &raquo;</Text>
                                            </TouchableOpacity>
                                        </View>
                                        <View style={{flex: 1}}>
                                            <Text style={{textAlign: 'center', fontFamily: 'sofia-black'}}>{item.name}</Text>
                                            <Text style={{textAlign: 'center', fontFamily: 'sofia-medium'}}>{item.description}</Text>
                                            {item.previous_price > 0 ? 
                                                <View style={{flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}>
                                                    <Text style={{textAlign: 'center', fontFamily: 'sofia-medium', textDecorationLine: 'line-through', marginRight: wp(2)}}>{item.previous_price}</Text>
                                                    <Text style={{textAlign: 'center', fontFamily: 'sofia-bold', fontSize: wp(5)}}>{item.price}</Text>
                                                </View>:
                                                <Text style={{textAlign: 'center', fontFamily: 'sofia-bold'}}>{item.price}</Text>
                                            }
                                                
                                                    
                                                    {search(item) ? cartData.map((item1) => {
                                                        return item1.ordereditem  === item.name ? 
                                                            
                                                            <View key={item1.id} style={{flexDirection: 'row', justifyContent: 'center'}}>
                                                                
                                                                <TouchableOpacity onPress={buildCart(item)}>
                                                                    <Text>+ </Text>
                                                                </TouchableOpacity>
                                                                <Text> {item1.item_count} </Text> 
                                                                <TouchableOpacity onPress={reduceItem(item)}>
                                                                    <Text> -</Text>
                                                                </TouchableOpacity>
                                                            </View>
                                                            : null
                                                        }): 
                                                        <TouchableOpacity onPress={buildCart(item)}>
                                                            <Text style={{textAlign: 'center', fontFamily: 'sofia-medium'}}>Add to cart</Text>
                                                        </TouchableOpacity>
                                                    }
                                            
                                        </View>
                                    </View>
                            )}
                        />
                    </View>

                {cartStatus !==401 ? cartData.length > 0 ? handleOpen(): handleClose(): null}
                <View style={[styles.sheet]}>
                    <Animated.View style={[styles.popup, slideUp]}>
                        <Text style={{flex: 1, textAlign: 'center'}}>Items added to your cart!</Text>
                        <TouchableOpacity style={{flex: 1}} onPress={() => navigation.navigate('cart')}>
                        <Text style={{textAlign: 'center'}}>View Cart</Text>
                        </TouchableOpacity>
                    </Animated.View>
                </View>
            </View>
)
}


const styles = StyleSheet.create({
  container: {
      flex: 1,
      backgroundColor: '#fff',
      paddingTop: hp(5),
  },
  refreshcontainer: {
        flex: 1,
        backgroundColor: 'white',
        flexDirection: 'row',
  },
  refreshscrollview: {
        flex: 1,
        textAlign: 'center',
        alignItems: 'center',
        justifyContent: 'center',
  },
  sheet: {
    position: "absolute",
    top: Dimensions.get('window').height,
    left: 0,
    right: 0,
    height: "100%",
    justifyContent: "flex-end",
  },
  popup: {
    backgroundColor: "#99b898",
    elevation: 3,
    shadowOffset: {width: 3, height:3},
    marginHorizontal: 15,
    marginBottom: 5,
    borderTopLeftRadius: 5,
    borderTopRightRadius: 5,
    borderBottomLeftRadius: 5,
    borderBottomRightRadius: 5,
    minHeight: 60,
    flexDirection: 'row',
    alignItems: 'center'
  },
});